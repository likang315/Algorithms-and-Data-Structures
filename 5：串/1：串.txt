
串：由 0个或者多个字符组成的有限序列

1：串的表示：用"" 或者 '' 标识

基本术语
	1:空串：不含任何字符的串
	2:空白串：仅由1个或者多个空格构成的串
	3:子串：串中任意个连续字符组成的子序列
	4:主串：包含子串的串
	5:模式匹配：一般将主串称为目标串，子串称为模式串

2：串的存储结构
 1>:定长顺序串：直接使用定长的字符数组定义，存在"截断"情况
	#define MAXSIZE 100
	typedef struct
	{
		char ch[MAXSIZE];
		int len;
	}SString;

  插入，删除，连接，求子串类似于顺序表

 2>:堆串：与顺序串类似，只不过它的存储空间是动态分配的，与malloc()和free()联用，不存在"截断"
	typedef struct 
	{
		char * ch;
		int len;
	}HString;

 插入，删除，连接，求子串类似于顺序表

 3>:块链串：用链式存储结构，链表的每个结点既可以存储一个或者多个字符,每个结点成为块,整个链表称为块链结构

        #define BLOCK_SIZE 4
	typedef struct block
	{
		char ch[BLOCK_SIZE];
		struct block * next;
	}Block;


3：串的模式匹配
   1:BF(brute-force)：暴力匹配
	从主串第pos个字符开始,和模式串的第一个字符开始比较,若相等,则继续逐个比较后续字符,否则回溯到第pos+1个字符重新
        开始比较,若匹配成功,则则返回模式串的第一个字符在主串的位置

     时间复杂度:O(n * m),n和m分别为主串和模式串的长度

   2:KMP(Knuth Morris Pratt)匹配算法
	每当一趟匹配失败后,主串中的指针i 不需要回溯,而是从主串当前位置i继续和模式串重新开始匹配
    
     时间复杂度O(m+n)

	
4：文本编辑软件：操作字符串的




	